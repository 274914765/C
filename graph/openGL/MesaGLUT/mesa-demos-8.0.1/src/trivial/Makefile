# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/trivial/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright Â© 2009 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#
# Authors:
#    Eric Anholt <eric@anholt.net>


pkgdatadir = $(datadir)/mesa-demos
pkgincludedir = $(includedir)/mesa-demos
pkglibdir = $(libdir)/mesa-demos
pkglibexecdir = $(libexecdir)/mesa-demos
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = clear$(EXEEXT) clear-fbo$(EXEEXT) \
	clear-fbo-tex$(EXEEXT) clear-random$(EXEEXT) \
	clear-repeat$(EXEEXT) clear-scissor$(EXEEXT) \
	clear-undefined$(EXEEXT) createwin$(EXEEXT) \
	dlist-begin-call-end$(EXEEXT) \
	dlist-dangling$(EXEEXT) \
	dlist-degenerate$(EXEEXT) \
	dlist-edgeflag$(EXEEXT) \
	dlist-edgeflag-dangling$(EXEEXT) \
	dlist-flat-tri$(EXEEXT) dlist-mat-tri$(EXEEXT) \
	dlist-recursive-call$(EXEEXT) \
	dlist-tri-flat-tri$(EXEEXT) \
	dlist-tri-mat-tri$(EXEEXT) \
	draw2arrays$(EXEEXT) drawarrays$(EXEEXT) \
	drawelements$(EXEEXT) drawrange$(EXEEXT) \
	flat-clip$(EXEEXT) fs-tri$(EXEEXT) \
	line$(EXEEXT) line-clip$(EXEEXT) \
	line-cull$(EXEEXT) line-flat$(EXEEXT) \
	lineloop$(EXEEXT) lineloop-clip$(EXEEXT) \
	lineloop-elts$(EXEEXT) line-smooth$(EXEEXT) \
	line-stipple-wide$(EXEEXT) linestrip$(EXEEXT) \
	linestrip-clip$(EXEEXT) \
	linestrip-flat-stipple$(EXEEXT) \
	linestrip-stipple$(EXEEXT) \
	linestrip-stipple-wide$(EXEEXT) \
	line-userclip$(EXEEXT) \
	line-userclip-clip$(EXEEXT) \
	line-userclip-nop$(EXEEXT) \
	line-userclip-nop-clip$(EXEEXT) \
	line-wide$(EXEEXT) long-fixed-func$(EXEEXT) \
	pgon-mode$(EXEEXT) point$(EXEEXT) \
	point-clip$(EXEEXT) point-param$(EXEEXT) \
	point-sprite$(EXEEXT) point-wide$(EXEEXT) \
	point-wide-smooth$(EXEEXT) poly$(EXEEXT) \
	poly-flat$(EXEEXT) poly-flat-clip$(EXEEXT) \
	poly-flat-unfilled-clip$(EXEEXT) \
	poly-unfilled$(EXEEXT) quad$(EXEEXT) \
	quad-clip-all-vertices$(EXEEXT) \
	quad-clip$(EXEEXT) \
	quad-clip-nearplane$(EXEEXT) \
	quad-degenerate$(EXEEXT) quad-flat$(EXEEXT) \
	quad-offset-factor$(EXEEXT) \
	quad-offset-unfilled$(EXEEXT) \
	quad-offset-units$(EXEEXT) quads$(EXEEXT) \
	quadstrip$(EXEEXT) quadstrip-clip$(EXEEXT) \
	quadstrip-cont$(EXEEXT) \
	quadstrip-flat$(EXEEXT) quad-tex-2d$(EXEEXT) \
	quad-tex-3d$(EXEEXT) quad-tex-alpha$(EXEEXT) \
	quad-tex-pbo$(EXEEXT) quad-tex-sub$(EXEEXT) \
	quad-unfilled$(EXEEXT) \
	quad-unfilled-clip$(EXEEXT) \
	quad-unfilled-stipple$(EXEEXT) \
	readpixels$(EXEEXT) tri-alpha$(EXEEXT) \
	tri-alpha-tex$(EXEEXT) \
	tri-array-interleaved$(EXEEXT) \
	tri-blend$(EXEEXT) tri-blend-color$(EXEEXT) \
	tri-blend-max$(EXEEXT) tri-blend-min$(EXEEXT) \
	tri-blend-revsub$(EXEEXT) \
	tri-blend-sub$(EXEEXT) tri$(EXEEXT) \
	tri-clear$(EXEEXT) tri-clip$(EXEEXT) \
	tri-cull-both$(EXEEXT) tri-cull$(EXEEXT) \
	tri-dlist$(EXEEXT) tri-edgeflag$(EXEEXT) \
	trifan$(EXEEXT) trifan-flat$(EXEEXT) \
	trifan-flat-clip$(EXEEXT) \
	trifan-flat-unfilled-clip$(EXEEXT) \
	trifan-unfilled$(EXEEXT) tri-fbo$(EXEEXT) \
	tri-fbo-tex$(EXEEXT) tri-fbo-tex-mip$(EXEEXT) \
	tri-flat$(EXEEXT) tri-flat-clip$(EXEEXT) \
	tri-fog$(EXEEXT) tri-fp$(EXEEXT) \
	tri-fp-const-imm$(EXEEXT) tri-lit$(EXEEXT) \
	tri-lit-material$(EXEEXT) \
	tri-logicop-none$(EXEEXT) \
	tri-logicop-xor$(EXEEXT) tri-mask-tri$(EXEEXT) \
	tri-multitex-vbo$(EXEEXT) tri-orig$(EXEEXT) \
	tri-query$(EXEEXT) tri-repeat$(EXEEXT) \
	tri-scissor-tri$(EXEEXT) tri-square$(EXEEXT) \
	tri-stencil$(EXEEXT) tri-stipple$(EXEEXT) \
	tristrip$(EXEEXT) tristrip-clip$(EXEEXT) \
	tristrip-flat$(EXEEXT) tri-tex-3d$(EXEEXT) \
	tri-tex$(EXEEXT) tri-tri$(EXEEXT) \
	tri-unfilled$(EXEEXT) \
	tri-unfilled-clip$(EXEEXT) \
	tri-unfilled-edgeflag$(EXEEXT) \
	tri-unfilled-fog$(EXEEXT) \
	tri-unfilled-point$(EXEEXT) \
	tri-unfilled-smooth$(EXEEXT) \
	tri-unfilled-tri$(EXEEXT) \
	tri-unfilled-tri-lit$(EXEEXT) \
	tri-unfilled-userclip$(EXEEXT) \
	tri-unfilled-userclip-stip$(EXEEXT) \
	tri-userclip$(EXEEXT) tri-viewport$(EXEEXT) \
	tri-z-9$(EXEEXT) tri-z$(EXEEXT) \
	tri-z-eq$(EXEEXT) vbo-drawarrays$(EXEEXT) \
	vbo-drawelements$(EXEEXT) \
	vbo-drawrange$(EXEEXT) \
	vbo-noninterleaved$(EXEEXT) vp-array$(EXEEXT) \
	vp-array-int$(EXEEXT) vp-clip$(EXEEXT) \
	vp-line-clip$(EXEEXT) vp-tri$(EXEEXT) \
	vp-tri-cb$(EXEEXT) vp-tri-cb-pos$(EXEEXT) \
	vp-tri-cb-tex$(EXEEXT) vp-tri-imm$(EXEEXT) \
	vp-tri-invariant$(EXEEXT) vp-tri-swap$(EXEEXT) \
	vp-tri-tex$(EXEEXT) vp-unfilled$(EXEEXT)
subdir = src/trivial
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
clear_SOURCES = clear.c
clear_OBJECTS = clear.$(OBJEXT)
clear_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
clear_fbo_SOURCES = clear-fbo.c
clear_fbo_OBJECTS = clear-fbo.$(OBJEXT)
clear_fbo_LDADD = $(LDADD)
clear_fbo_tex_SOURCES = clear-fbo-tex.c
clear_fbo_tex_OBJECTS = clear-fbo-tex.$(OBJEXT)
clear_fbo_tex_LDADD = $(LDADD)
clear_random_SOURCES = clear-random.c
clear_random_OBJECTS = clear-random.$(OBJEXT)
clear_random_LDADD = $(LDADD)
clear_repeat_SOURCES = clear-repeat.c
clear_repeat_OBJECTS = clear-repeat.$(OBJEXT)
clear_repeat_LDADD = $(LDADD)
clear_scissor_SOURCES = clear-scissor.c
clear_scissor_OBJECTS = clear-scissor.$(OBJEXT)
clear_scissor_LDADD = $(LDADD)
clear_undefined_SOURCES = clear-undefined.c
clear_undefined_OBJECTS = clear-undefined.$(OBJEXT)
clear_undefined_LDADD = $(LDADD)
createwin_SOURCES = createwin.c
createwin_OBJECTS = createwin.$(OBJEXT)
createwin_LDADD = $(LDADD)
dlist_begin_call_end_SOURCES = dlist-begin-call-end.c
dlist_begin_call_end_OBJECTS = dlist-begin-call-end.$(OBJEXT)
dlist_begin_call_end_LDADD = $(LDADD)
dlist_dangling_SOURCES = dlist-dangling.c
dlist_dangling_OBJECTS = dlist-dangling.$(OBJEXT)
dlist_dangling_LDADD = $(LDADD)
dlist_degenerate_SOURCES = dlist-degenerate.c
dlist_degenerate_OBJECTS = dlist-degenerate.$(OBJEXT)
dlist_degenerate_LDADD = $(LDADD)
dlist_edgeflag_SOURCES = dlist-edgeflag.c
dlist_edgeflag_OBJECTS = dlist-edgeflag.$(OBJEXT)
dlist_edgeflag_LDADD = $(LDADD)
dlist_edgeflag_dangling_SOURCES = dlist-edgeflag-dangling.c
dlist_edgeflag_dangling_OBJECTS = dlist-edgeflag-dangling.$(OBJEXT)
dlist_edgeflag_dangling_LDADD = $(LDADD)
dlist_flat_tri_SOURCES = dlist-flat-tri.c
dlist_flat_tri_OBJECTS = dlist-flat-tri.$(OBJEXT)
dlist_flat_tri_LDADD = $(LDADD)
dlist_mat_tri_SOURCES = dlist-mat-tri.c
dlist_mat_tri_OBJECTS = dlist-mat-tri.$(OBJEXT)
dlist_mat_tri_LDADD = $(LDADD)
dlist_recursive_call_SOURCES = dlist-recursive-call.c
dlist_recursive_call_OBJECTS = dlist-recursive-call.$(OBJEXT)
dlist_recursive_call_LDADD = $(LDADD)
dlist_tri_flat_tri_SOURCES = dlist-tri-flat-tri.c
dlist_tri_flat_tri_OBJECTS = dlist-tri-flat-tri.$(OBJEXT)
dlist_tri_flat_tri_LDADD = $(LDADD)
dlist_tri_mat_tri_SOURCES = dlist-tri-mat-tri.c
dlist_tri_mat_tri_OBJECTS = dlist-tri-mat-tri.$(OBJEXT)
dlist_tri_mat_tri_LDADD = $(LDADD)
draw2arrays_SOURCES = draw2arrays.c
draw2arrays_OBJECTS = draw2arrays.$(OBJEXT)
draw2arrays_LDADD = $(LDADD)
drawarrays_SOURCES = drawarrays.c
drawarrays_OBJECTS = drawarrays.$(OBJEXT)
drawarrays_LDADD = $(LDADD)
drawelements_SOURCES = drawelements.c
drawelements_OBJECTS = drawelements.$(OBJEXT)
drawelements_LDADD = $(LDADD)
drawrange_SOURCES = drawrange.c
drawrange_OBJECTS = drawrange.$(OBJEXT)
drawrange_LDADD = $(LDADD)
flat_clip_SOURCES = flat-clip.c
flat_clip_OBJECTS = flat-clip.$(OBJEXT)
flat_clip_LDADD = $(LDADD)
fs_tri_SOURCES = fs-tri.c
fs_tri_OBJECTS = fs-tri.$(OBJEXT)
fs_tri_LDADD = $(LDADD)
line_SOURCES = line.c
line_OBJECTS = line.$(OBJEXT)
line_LDADD = $(LDADD)
line_clip_SOURCES = line-clip.c
line_clip_OBJECTS = line-clip.$(OBJEXT)
line_clip_LDADD = $(LDADD)
line_cull_SOURCES = line-cull.c
line_cull_OBJECTS = line-cull.$(OBJEXT)
line_cull_LDADD = $(LDADD)
line_flat_SOURCES = line-flat.c
line_flat_OBJECTS = line-flat.$(OBJEXT)
line_flat_LDADD = $(LDADD)
line_smooth_SOURCES = line-smooth.c
line_smooth_OBJECTS = line-smooth.$(OBJEXT)
line_smooth_LDADD = $(LDADD)
line_stipple_wide_SOURCES = line-stipple-wide.c
line_stipple_wide_OBJECTS = line-stipple-wide.$(OBJEXT)
line_stipple_wide_LDADD = $(LDADD)
line_userclip_SOURCES = line-userclip.c
line_userclip_OBJECTS = line-userclip.$(OBJEXT)
line_userclip_LDADD = $(LDADD)
line_userclip_clip_SOURCES = line-userclip-clip.c
line_userclip_clip_OBJECTS = line-userclip-clip.$(OBJEXT)
line_userclip_clip_LDADD = $(LDADD)
line_userclip_nop_SOURCES = line-userclip-nop.c
line_userclip_nop_OBJECTS = line-userclip-nop.$(OBJEXT)
line_userclip_nop_LDADD = $(LDADD)
line_userclip_nop_clip_SOURCES = line-userclip-nop-clip.c
line_userclip_nop_clip_OBJECTS = line-userclip-nop-clip.$(OBJEXT)
line_userclip_nop_clip_LDADD = $(LDADD)
line_wide_SOURCES = line-wide.c
line_wide_OBJECTS = line-wide.$(OBJEXT)
line_wide_LDADD = $(LDADD)
lineloop_SOURCES = lineloop.c
lineloop_OBJECTS = lineloop.$(OBJEXT)
lineloop_LDADD = $(LDADD)
lineloop_clip_SOURCES = lineloop-clip.c
lineloop_clip_OBJECTS = lineloop-clip.$(OBJEXT)
lineloop_clip_LDADD = $(LDADD)
lineloop_elts_SOURCES = lineloop-elts.c
lineloop_elts_OBJECTS = lineloop-elts.$(OBJEXT)
lineloop_elts_LDADD = $(LDADD)
linestrip_SOURCES = linestrip.c
linestrip_OBJECTS = linestrip.$(OBJEXT)
linestrip_LDADD = $(LDADD)
linestrip_clip_SOURCES = linestrip-clip.c
linestrip_clip_OBJECTS = linestrip-clip.$(OBJEXT)
linestrip_clip_LDADD = $(LDADD)
linestrip_flat_stipple_SOURCES = linestrip-flat-stipple.c
linestrip_flat_stipple_OBJECTS = linestrip-flat-stipple.$(OBJEXT)
linestrip_flat_stipple_LDADD = $(LDADD)
linestrip_stipple_SOURCES = linestrip-stipple.c
linestrip_stipple_OBJECTS = linestrip-stipple.$(OBJEXT)
linestrip_stipple_LDADD = $(LDADD)
linestrip_stipple_wide_SOURCES = linestrip-stipple-wide.c
linestrip_stipple_wide_OBJECTS = linestrip-stipple-wide.$(OBJEXT)
linestrip_stipple_wide_LDADD = $(LDADD)
long_fixed_func_SOURCES = long-fixed-func.c
long_fixed_func_OBJECTS = long-fixed-func.$(OBJEXT)
long_fixed_func_LDADD = $(LDADD)
pgon_mode_SOURCES = pgon-mode.c
pgon_mode_OBJECTS = pgon-mode.$(OBJEXT)
pgon_mode_LDADD = $(LDADD)
point_SOURCES = point.c
point_OBJECTS = point.$(OBJEXT)
point_LDADD = $(LDADD)
point_clip_SOURCES = point-clip.c
point_clip_OBJECTS = point-clip.$(OBJEXT)
point_clip_LDADD = $(LDADD)
point_param_SOURCES = point-param.c
point_param_OBJECTS = point-param.$(OBJEXT)
point_param_LDADD = $(LDADD)
point_sprite_SOURCES = point-sprite.c
point_sprite_OBJECTS = point-sprite.$(OBJEXT)
point_sprite_LDADD = $(LDADD)
point_wide_SOURCES = point-wide.c
point_wide_OBJECTS = point-wide.$(OBJEXT)
point_wide_LDADD = $(LDADD)
point_wide_smooth_SOURCES = point-wide-smooth.c
point_wide_smooth_OBJECTS = point-wide-smooth.$(OBJEXT)
point_wide_smooth_LDADD = $(LDADD)
poly_SOURCES = poly.c
poly_OBJECTS = poly.$(OBJEXT)
poly_LDADD = $(LDADD)
poly_flat_SOURCES = poly-flat.c
poly_flat_OBJECTS = poly-flat.$(OBJEXT)
poly_flat_LDADD = $(LDADD)
poly_flat_clip_SOURCES = poly-flat-clip.c
poly_flat_clip_OBJECTS = poly-flat-clip.$(OBJEXT)
poly_flat_clip_LDADD = $(LDADD)
poly_flat_unfilled_clip_SOURCES = poly-flat-unfilled-clip.c
poly_flat_unfilled_clip_OBJECTS = poly-flat-unfilled-clip.$(OBJEXT)
poly_flat_unfilled_clip_LDADD = $(LDADD)
poly_unfilled_SOURCES = poly-unfilled.c
poly_unfilled_OBJECTS = poly-unfilled.$(OBJEXT)
poly_unfilled_LDADD = $(LDADD)
quad_SOURCES = quad.c
quad_OBJECTS = quad.$(OBJEXT)
quad_LDADD = $(LDADD)
quad_clip_SOURCES = quad-clip.c
quad_clip_OBJECTS = quad-clip.$(OBJEXT)
quad_clip_LDADD = $(LDADD)
quad_clip_all_vertices_SOURCES = quad-clip-all-vertices.c
quad_clip_all_vertices_OBJECTS = quad-clip-all-vertices.$(OBJEXT)
quad_clip_all_vertices_LDADD = $(LDADD)
quad_clip_nearplane_SOURCES = quad-clip-nearplane.c
quad_clip_nearplane_OBJECTS = quad-clip-nearplane.$(OBJEXT)
quad_clip_nearplane_LDADD = $(LDADD)
quad_degenerate_SOURCES = quad-degenerate.c
quad_degenerate_OBJECTS = quad-degenerate.$(OBJEXT)
quad_degenerate_LDADD = $(LDADD)
quad_flat_SOURCES = quad-flat.c
quad_flat_OBJECTS = quad-flat.$(OBJEXT)
quad_flat_LDADD = $(LDADD)
quad_offset_factor_SOURCES = quad-offset-factor.c
quad_offset_factor_OBJECTS = quad-offset-factor.$(OBJEXT)
quad_offset_factor_LDADD = $(LDADD)
quad_offset_unfilled_SOURCES = quad-offset-unfilled.c
quad_offset_unfilled_OBJECTS = quad-offset-unfilled.$(OBJEXT)
quad_offset_unfilled_LDADD = $(LDADD)
quad_offset_units_SOURCES = quad-offset-units.c
quad_offset_units_OBJECTS = quad-offset-units.$(OBJEXT)
quad_offset_units_LDADD = $(LDADD)
quad_tex_2d_SOURCES = quad-tex-2d.c
quad_tex_2d_OBJECTS = quad-tex-2d.$(OBJEXT)
quad_tex_2d_LDADD = $(LDADD)
quad_tex_3d_SOURCES = quad-tex-3d.c
quad_tex_3d_OBJECTS = quad-tex-3d.$(OBJEXT)
quad_tex_3d_LDADD = $(LDADD)
quad_tex_alpha_SOURCES = quad-tex-alpha.c
quad_tex_alpha_OBJECTS = quad-tex-alpha.$(OBJEXT)
quad_tex_alpha_LDADD = $(LDADD)
quad_tex_pbo_SOURCES = quad-tex-pbo.c
quad_tex_pbo_OBJECTS = quad-tex-pbo.$(OBJEXT)
quad_tex_pbo_LDADD = $(LDADD)
quad_tex_sub_SOURCES = quad-tex-sub.c
quad_tex_sub_OBJECTS = quad-tex-sub.$(OBJEXT)
quad_tex_sub_LDADD = $(LDADD)
quad_unfilled_SOURCES = quad-unfilled.c
quad_unfilled_OBJECTS = quad-unfilled.$(OBJEXT)
quad_unfilled_LDADD = $(LDADD)
quad_unfilled_clip_SOURCES = quad-unfilled-clip.c
quad_unfilled_clip_OBJECTS = quad-unfilled-clip.$(OBJEXT)
quad_unfilled_clip_LDADD = $(LDADD)
quad_unfilled_stipple_SOURCES = quad-unfilled-stipple.c
quad_unfilled_stipple_OBJECTS = quad-unfilled-stipple.$(OBJEXT)
quad_unfilled_stipple_LDADD = $(LDADD)
quads_SOURCES = quads.c
quads_OBJECTS = quads.$(OBJEXT)
quads_LDADD = $(LDADD)
quadstrip_SOURCES = quadstrip.c
quadstrip_OBJECTS = quadstrip.$(OBJEXT)
quadstrip_LDADD = $(LDADD)
quadstrip_clip_SOURCES = quadstrip-clip.c
quadstrip_clip_OBJECTS = quadstrip-clip.$(OBJEXT)
quadstrip_clip_LDADD = $(LDADD)
quadstrip_cont_SOURCES = quadstrip-cont.c
quadstrip_cont_OBJECTS = quadstrip-cont.$(OBJEXT)
quadstrip_cont_LDADD = $(LDADD)
quadstrip_flat_SOURCES = quadstrip-flat.c
quadstrip_flat_OBJECTS = quadstrip-flat.$(OBJEXT)
quadstrip_flat_LDADD = $(LDADD)
readpixels_SOURCES = readpixels.c
readpixels_OBJECTS = readpixels.$(OBJEXT)
readpixels_LDADD = $(LDADD)
tri_SOURCES = tri.c
tri_OBJECTS = tri.$(OBJEXT)
tri_LDADD = $(LDADD)
tri_alpha_SOURCES = tri-alpha.c
tri_alpha_OBJECTS = tri-alpha.$(OBJEXT)
tri_alpha_LDADD = $(LDADD)
tri_alpha_tex_SOURCES = tri-alpha-tex.c
tri_alpha_tex_OBJECTS = tri-alpha-tex.$(OBJEXT)
tri_alpha_tex_LDADD = $(LDADD)
tri_array_interleaved_SOURCES = tri-array-interleaved.c
tri_array_interleaved_OBJECTS = tri-array-interleaved.$(OBJEXT)
tri_array_interleaved_LDADD = $(LDADD)
tri_blend_SOURCES = tri-blend.c
tri_blend_OBJECTS = tri-blend.$(OBJEXT)
tri_blend_LDADD = $(LDADD)
tri_blend_color_SOURCES = tri-blend-color.c
tri_blend_color_OBJECTS = tri-blend-color.$(OBJEXT)
tri_blend_color_LDADD = $(LDADD)
tri_blend_max_SOURCES = tri-blend-max.c
tri_blend_max_OBJECTS = tri-blend-max.$(OBJEXT)
tri_blend_max_LDADD = $(LDADD)
tri_blend_min_SOURCES = tri-blend-min.c
tri_blend_min_OBJECTS = tri-blend-min.$(OBJEXT)
tri_blend_min_LDADD = $(LDADD)
tri_blend_revsub_SOURCES = tri-blend-revsub.c
tri_blend_revsub_OBJECTS = tri-blend-revsub.$(OBJEXT)
tri_blend_revsub_LDADD = $(LDADD)
tri_blend_sub_SOURCES = tri-blend-sub.c
tri_blend_sub_OBJECTS = tri-blend-sub.$(OBJEXT)
tri_blend_sub_LDADD = $(LDADD)
tri_clear_SOURCES = tri-clear.c
tri_clear_OBJECTS = tri-clear.$(OBJEXT)
tri_clear_LDADD = $(LDADD)
tri_clip_SOURCES = tri-clip.c
tri_clip_OBJECTS = tri-clip.$(OBJEXT)
tri_clip_LDADD = $(LDADD)
tri_cull_SOURCES = tri-cull.c
tri_cull_OBJECTS = tri-cull.$(OBJEXT)
tri_cull_LDADD = $(LDADD)
tri_cull_both_SOURCES = tri-cull-both.c
tri_cull_both_OBJECTS = tri-cull-both.$(OBJEXT)
tri_cull_both_LDADD = $(LDADD)
tri_dlist_SOURCES = tri-dlist.c
tri_dlist_OBJECTS = tri-dlist.$(OBJEXT)
tri_dlist_LDADD = $(LDADD)
tri_edgeflag_SOURCES = tri-edgeflag.c
tri_edgeflag_OBJECTS = tri-edgeflag.$(OBJEXT)
tri_edgeflag_LDADD = $(LDADD)
tri_fbo_SOURCES = tri-fbo.c
tri_fbo_OBJECTS = tri-fbo.$(OBJEXT)
tri_fbo_LDADD = $(LDADD)
tri_fbo_tex_SOURCES = tri-fbo-tex.c
tri_fbo_tex_OBJECTS = tri-fbo-tex.$(OBJEXT)
tri_fbo_tex_LDADD = $(LDADD)
tri_fbo_tex_mip_SOURCES = tri-fbo-tex-mip.c
tri_fbo_tex_mip_OBJECTS = tri-fbo-tex-mip.$(OBJEXT)
tri_fbo_tex_mip_LDADD = $(LDADD)
tri_flat_SOURCES = tri-flat.c
tri_flat_OBJECTS = tri-flat.$(OBJEXT)
tri_flat_LDADD = $(LDADD)
tri_flat_clip_SOURCES = tri-flat-clip.c
tri_flat_clip_OBJECTS = tri-flat-clip.$(OBJEXT)
tri_flat_clip_LDADD = $(LDADD)
tri_fog_SOURCES = tri-fog.c
tri_fog_OBJECTS = tri-fog.$(OBJEXT)
tri_fog_LDADD = $(LDADD)
tri_fp_SOURCES = tri-fp.c
tri_fp_OBJECTS = tri-fp.$(OBJEXT)
tri_fp_LDADD = $(LDADD)
tri_fp_const_imm_SOURCES = tri-fp-const-imm.c
tri_fp_const_imm_OBJECTS = tri-fp-const-imm.$(OBJEXT)
tri_fp_const_imm_LDADD = $(LDADD)
tri_lit_SOURCES = tri-lit.c
tri_lit_OBJECTS = tri-lit.$(OBJEXT)
tri_lit_LDADD = $(LDADD)
tri_lit_material_SOURCES = tri-lit-material.c
tri_lit_material_OBJECTS = tri-lit-material.$(OBJEXT)
tri_lit_material_LDADD = $(LDADD)
tri_logicop_none_SOURCES = tri-logicop-none.c
tri_logicop_none_OBJECTS = tri-logicop-none.$(OBJEXT)
tri_logicop_none_LDADD = $(LDADD)
tri_logicop_xor_SOURCES = tri-logicop-xor.c
tri_logicop_xor_OBJECTS = tri-logicop-xor.$(OBJEXT)
tri_logicop_xor_LDADD = $(LDADD)
tri_mask_tri_SOURCES = tri-mask-tri.c
tri_mask_tri_OBJECTS = tri-mask-tri.$(OBJEXT)
tri_mask_tri_LDADD = $(LDADD)
tri_multitex_vbo_SOURCES = tri-multitex-vbo.c
tri_multitex_vbo_OBJECTS = tri-multitex-vbo.$(OBJEXT)
tri_multitex_vbo_LDADD = $(LDADD)
tri_orig_SOURCES = tri-orig.c
tri_orig_OBJECTS = tri-orig.$(OBJEXT)
tri_orig_LDADD = $(LDADD)
tri_query_SOURCES = tri-query.c
tri_query_OBJECTS = tri-query.$(OBJEXT)
tri_query_LDADD = $(LDADD)
tri_repeat_SOURCES = tri-repeat.c
tri_repeat_OBJECTS = tri-repeat.$(OBJEXT)
tri_repeat_LDADD = $(LDADD)
tri_scissor_tri_SOURCES = tri-scissor-tri.c
tri_scissor_tri_OBJECTS = tri-scissor-tri.$(OBJEXT)
tri_scissor_tri_LDADD = $(LDADD)
tri_square_SOURCES = tri-square.c
tri_square_OBJECTS = tri-square.$(OBJEXT)
tri_square_LDADD = $(LDADD)
tri_stencil_SOURCES = tri-stencil.c
tri_stencil_OBJECTS = tri-stencil.$(OBJEXT)
tri_stencil_LDADD = $(LDADD)
tri_stipple_SOURCES = tri-stipple.c
tri_stipple_OBJECTS = tri-stipple.$(OBJEXT)
tri_stipple_LDADD = $(LDADD)
tri_tex_SOURCES = tri-tex.c
tri_tex_OBJECTS = tri-tex.$(OBJEXT)
tri_tex_LDADD = $(LDADD)
tri_tex_3d_SOURCES = tri-tex-3d.c
tri_tex_3d_OBJECTS = tri-tex-3d.$(OBJEXT)
tri_tex_3d_LDADD = $(LDADD)
tri_tri_SOURCES = tri-tri.c
tri_tri_OBJECTS = tri-tri.$(OBJEXT)
tri_tri_LDADD = $(LDADD)
tri_unfilled_SOURCES = tri-unfilled.c
tri_unfilled_OBJECTS = tri-unfilled.$(OBJEXT)
tri_unfilled_LDADD = $(LDADD)
tri_unfilled_clip_SOURCES = tri-unfilled-clip.c
tri_unfilled_clip_OBJECTS = tri-unfilled-clip.$(OBJEXT)
tri_unfilled_clip_LDADD = $(LDADD)
tri_unfilled_edgeflag_SOURCES = tri-unfilled-edgeflag.c
tri_unfilled_edgeflag_OBJECTS = tri-unfilled-edgeflag.$(OBJEXT)
tri_unfilled_edgeflag_LDADD = $(LDADD)
tri_unfilled_fog_SOURCES = tri-unfilled-fog.c
tri_unfilled_fog_OBJECTS = tri-unfilled-fog.$(OBJEXT)
tri_unfilled_fog_LDADD = $(LDADD)
tri_unfilled_point_SOURCES = tri-unfilled-point.c
tri_unfilled_point_OBJECTS = tri-unfilled-point.$(OBJEXT)
tri_unfilled_point_LDADD = $(LDADD)
tri_unfilled_smooth_SOURCES = tri-unfilled-smooth.c
tri_unfilled_smooth_OBJECTS = tri-unfilled-smooth.$(OBJEXT)
tri_unfilled_smooth_LDADD = $(LDADD)
tri_unfilled_tri_SOURCES = tri-unfilled-tri.c
tri_unfilled_tri_OBJECTS = tri-unfilled-tri.$(OBJEXT)
tri_unfilled_tri_LDADD = $(LDADD)
tri_unfilled_tri_lit_SOURCES = tri-unfilled-tri-lit.c
tri_unfilled_tri_lit_OBJECTS = tri-unfilled-tri-lit.$(OBJEXT)
tri_unfilled_tri_lit_LDADD = $(LDADD)
tri_unfilled_userclip_SOURCES = tri-unfilled-userclip.c
tri_unfilled_userclip_OBJECTS = tri-unfilled-userclip.$(OBJEXT)
tri_unfilled_userclip_LDADD = $(LDADD)
tri_unfilled_userclip_stip_SOURCES = tri-unfilled-userclip-stip.c
tri_unfilled_userclip_stip_OBJECTS =  \
	tri-unfilled-userclip-stip.$(OBJEXT)
tri_unfilled_userclip_stip_LDADD = $(LDADD)
tri_userclip_SOURCES = tri-userclip.c
tri_userclip_OBJECTS = tri-userclip.$(OBJEXT)
tri_userclip_LDADD = $(LDADD)
tri_viewport_SOURCES = tri-viewport.c
tri_viewport_OBJECTS = tri-viewport.$(OBJEXT)
tri_viewport_LDADD = $(LDADD)
tri_z_SOURCES = tri-z.c
tri_z_OBJECTS = tri-z.$(OBJEXT)
tri_z_LDADD = $(LDADD)
tri_z_9_SOURCES = tri-z-9.c
tri_z_9_OBJECTS = tri-z-9.$(OBJEXT)
tri_z_9_LDADD = $(LDADD)
tri_z_eq_SOURCES = tri-z-eq.c
tri_z_eq_OBJECTS = tri-z-eq.$(OBJEXT)
tri_z_eq_LDADD = $(LDADD)
trifan_SOURCES = trifan.c
trifan_OBJECTS = trifan.$(OBJEXT)
trifan_LDADD = $(LDADD)
trifan_flat_SOURCES = trifan-flat.c
trifan_flat_OBJECTS = trifan-flat.$(OBJEXT)
trifan_flat_LDADD = $(LDADD)
trifan_flat_clip_SOURCES = trifan-flat-clip.c
trifan_flat_clip_OBJECTS = trifan-flat-clip.$(OBJEXT)
trifan_flat_clip_LDADD = $(LDADD)
trifan_flat_unfilled_clip_SOURCES = trifan-flat-unfilled-clip.c
trifan_flat_unfilled_clip_OBJECTS =  \
	trifan-flat-unfilled-clip.$(OBJEXT)
trifan_flat_unfilled_clip_LDADD = $(LDADD)
trifan_unfilled_SOURCES = trifan-unfilled.c
trifan_unfilled_OBJECTS = trifan-unfilled.$(OBJEXT)
trifan_unfilled_LDADD = $(LDADD)
tristrip_SOURCES = tristrip.c
tristrip_OBJECTS = tristrip.$(OBJEXT)
tristrip_LDADD = $(LDADD)
tristrip_clip_SOURCES = tristrip-clip.c
tristrip_clip_OBJECTS = tristrip-clip.$(OBJEXT)
tristrip_clip_LDADD = $(LDADD)
tristrip_flat_SOURCES = tristrip-flat.c
tristrip_flat_OBJECTS = tristrip-flat.$(OBJEXT)
tristrip_flat_LDADD = $(LDADD)
vbo_drawarrays_SOURCES = vbo-drawarrays.c
vbo_drawarrays_OBJECTS = vbo-drawarrays.$(OBJEXT)
vbo_drawarrays_LDADD = $(LDADD)
vbo_drawelements_SOURCES = vbo-drawelements.c
vbo_drawelements_OBJECTS = vbo-drawelements.$(OBJEXT)
vbo_drawelements_LDADD = $(LDADD)
vbo_drawrange_SOURCES = vbo-drawrange.c
vbo_drawrange_OBJECTS = vbo-drawrange.$(OBJEXT)
vbo_drawrange_LDADD = $(LDADD)
vbo_noninterleaved_SOURCES = vbo-noninterleaved.c
vbo_noninterleaved_OBJECTS = vbo-noninterleaved.$(OBJEXT)
vbo_noninterleaved_LDADD = $(LDADD)
vp_array_SOURCES = vp-array.c
vp_array_OBJECTS = vp-array.$(OBJEXT)
vp_array_LDADD = $(LDADD)
vp_array_int_SOURCES = vp-array-int.c
vp_array_int_OBJECTS = vp-array-int.$(OBJEXT)
vp_array_int_LDADD = $(LDADD)
vp_clip_SOURCES = vp-clip.c
vp_clip_OBJECTS = vp-clip.$(OBJEXT)
vp_clip_LDADD = $(LDADD)
vp_line_clip_SOURCES = vp-line-clip.c
vp_line_clip_OBJECTS = vp-line-clip.$(OBJEXT)
vp_line_clip_LDADD = $(LDADD)
vp_tri_SOURCES = vp-tri.c
vp_tri_OBJECTS = vp-tri.$(OBJEXT)
vp_tri_LDADD = $(LDADD)
vp_tri_cb_SOURCES = vp-tri-cb.c
vp_tri_cb_OBJECTS = vp-tri-cb.$(OBJEXT)
vp_tri_cb_LDADD = $(LDADD)
vp_tri_cb_pos_SOURCES = vp-tri-cb-pos.c
vp_tri_cb_pos_OBJECTS = vp-tri-cb-pos.$(OBJEXT)
vp_tri_cb_pos_LDADD = $(LDADD)
vp_tri_cb_tex_SOURCES = vp-tri-cb-tex.c
vp_tri_cb_tex_OBJECTS = vp-tri-cb-tex.$(OBJEXT)
vp_tri_cb_tex_LDADD = $(LDADD)
vp_tri_imm_SOURCES = vp-tri-imm.c
vp_tri_imm_OBJECTS = vp-tri-imm.$(OBJEXT)
vp_tri_imm_LDADD = $(LDADD)
vp_tri_invariant_SOURCES = vp-tri-invariant.c
vp_tri_invariant_OBJECTS = vp-tri-invariant.$(OBJEXT)
vp_tri_invariant_LDADD = $(LDADD)
vp_tri_swap_SOURCES = vp-tri-swap.c
vp_tri_swap_OBJECTS = vp-tri-swap.$(OBJEXT)
vp_tri_swap_LDADD = $(LDADD)
vp_tri_tex_SOURCES = vp-tri-tex.c
vp_tri_tex_OBJECTS = vp-tri-tex.$(OBJEXT)
vp_tri_tex_LDADD = $(LDADD)
vp_unfilled_SOURCES = vp-unfilled.c
vp_unfilled_OBJECTS = vp-unfilled.$(OBJEXT)
vp_unfilled_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = clear.c clear-fbo.c clear-fbo-tex.c clear-random.c \
	clear-repeat.c clear-scissor.c clear-undefined.c createwin.c \
	dlist-begin-call-end.c dlist-dangling.c dlist-degenerate.c \
	dlist-edgeflag.c dlist-edgeflag-dangling.c dlist-flat-tri.c \
	dlist-mat-tri.c dlist-recursive-call.c dlist-tri-flat-tri.c \
	dlist-tri-mat-tri.c draw2arrays.c drawarrays.c drawelements.c \
	drawrange.c flat-clip.c fs-tri.c line.c line-clip.c \
	line-cull.c line-flat.c line-smooth.c line-stipple-wide.c \
	line-userclip.c line-userclip-clip.c line-userclip-nop.c \
	line-userclip-nop-clip.c line-wide.c lineloop.c \
	lineloop-clip.c lineloop-elts.c linestrip.c linestrip-clip.c \
	linestrip-flat-stipple.c linestrip-stipple.c \
	linestrip-stipple-wide.c long-fixed-func.c pgon-mode.c point.c \
	point-clip.c point-param.c point-sprite.c point-wide.c \
	point-wide-smooth.c poly.c poly-flat.c poly-flat-clip.c \
	poly-flat-unfilled-clip.c poly-unfilled.c quad.c quad-clip.c \
	quad-clip-all-vertices.c quad-clip-nearplane.c \
	quad-degenerate.c quad-flat.c quad-offset-factor.c \
	quad-offset-unfilled.c quad-offset-units.c quad-tex-2d.c \
	quad-tex-3d.c quad-tex-alpha.c quad-tex-pbo.c quad-tex-sub.c \
	quad-unfilled.c quad-unfilled-clip.c quad-unfilled-stipple.c \
	quads.c quadstrip.c quadstrip-clip.c quadstrip-cont.c \
	quadstrip-flat.c readpixels.c tri.c tri-alpha.c \
	tri-alpha-tex.c tri-array-interleaved.c tri-blend.c \
	tri-blend-color.c tri-blend-max.c tri-blend-min.c \
	tri-blend-revsub.c tri-blend-sub.c tri-clear.c tri-clip.c \
	tri-cull.c tri-cull-both.c tri-dlist.c tri-edgeflag.c \
	tri-fbo.c tri-fbo-tex.c tri-fbo-tex-mip.c tri-flat.c \
	tri-flat-clip.c tri-fog.c tri-fp.c tri-fp-const-imm.c \
	tri-lit.c tri-lit-material.c tri-logicop-none.c \
	tri-logicop-xor.c tri-mask-tri.c tri-multitex-vbo.c tri-orig.c \
	tri-query.c tri-repeat.c tri-scissor-tri.c tri-square.c \
	tri-stencil.c tri-stipple.c tri-tex.c tri-tex-3d.c tri-tri.c \
	tri-unfilled.c tri-unfilled-clip.c tri-unfilled-edgeflag.c \
	tri-unfilled-fog.c tri-unfilled-point.c tri-unfilled-smooth.c \
	tri-unfilled-tri.c tri-unfilled-tri-lit.c \
	tri-unfilled-userclip.c tri-unfilled-userclip-stip.c \
	tri-userclip.c tri-viewport.c tri-z.c tri-z-9.c tri-z-eq.c \
	trifan.c trifan-flat.c trifan-flat-clip.c \
	trifan-flat-unfilled-clip.c trifan-unfilled.c tristrip.c \
	tristrip-clip.c tristrip-flat.c vbo-drawarrays.c \
	vbo-drawelements.c vbo-drawrange.c vbo-noninterleaved.c \
	vp-array.c vp-array-int.c vp-clip.c vp-line-clip.c vp-tri.c \
	vp-tri-cb.c vp-tri-cb-pos.c vp-tri-cb-tex.c vp-tri-imm.c \
	vp-tri-invariant.c vp-tri-swap.c vp-tri-tex.c vp-unfilled.c
DIST_SOURCES = clear.c clear-fbo.c clear-fbo-tex.c clear-random.c \
	clear-repeat.c clear-scissor.c clear-undefined.c createwin.c \
	dlist-begin-call-end.c dlist-dangling.c dlist-degenerate.c \
	dlist-edgeflag.c dlist-edgeflag-dangling.c dlist-flat-tri.c \
	dlist-mat-tri.c dlist-recursive-call.c dlist-tri-flat-tri.c \
	dlist-tri-mat-tri.c draw2arrays.c drawarrays.c drawelements.c \
	drawrange.c flat-clip.c fs-tri.c line.c line-clip.c \
	line-cull.c line-flat.c line-smooth.c line-stipple-wide.c \
	line-userclip.c line-userclip-clip.c line-userclip-nop.c \
	line-userclip-nop-clip.c line-wide.c lineloop.c \
	lineloop-clip.c lineloop-elts.c linestrip.c linestrip-clip.c \
	linestrip-flat-stipple.c linestrip-stipple.c \
	linestrip-stipple-wide.c long-fixed-func.c pgon-mode.c point.c \
	point-clip.c point-param.c point-sprite.c point-wide.c \
	point-wide-smooth.c poly.c poly-flat.c poly-flat-clip.c \
	poly-flat-unfilled-clip.c poly-unfilled.c quad.c quad-clip.c \
	quad-clip-all-vertices.c quad-clip-nearplane.c \
	quad-degenerate.c quad-flat.c quad-offset-factor.c \
	quad-offset-unfilled.c quad-offset-units.c quad-tex-2d.c \
	quad-tex-3d.c quad-tex-alpha.c quad-tex-pbo.c quad-tex-sub.c \
	quad-unfilled.c quad-unfilled-clip.c quad-unfilled-stipple.c \
	quads.c quadstrip.c quadstrip-clip.c quadstrip-cont.c \
	quadstrip-flat.c readpixels.c tri.c tri-alpha.c \
	tri-alpha-tex.c tri-array-interleaved.c tri-blend.c \
	tri-blend-color.c tri-blend-max.c tri-blend-min.c \
	tri-blend-revsub.c tri-blend-sub.c tri-clear.c tri-clip.c \
	tri-cull.c tri-cull-both.c tri-dlist.c tri-edgeflag.c \
	tri-fbo.c tri-fbo-tex.c tri-fbo-tex-mip.c tri-flat.c \
	tri-flat-clip.c tri-fog.c tri-fp.c tri-fp-const-imm.c \
	tri-lit.c tri-lit-material.c tri-logicop-none.c \
	tri-logicop-xor.c tri-mask-tri.c tri-multitex-vbo.c tri-orig.c \
	tri-query.c tri-repeat.c tri-scissor-tri.c tri-square.c \
	tri-stencil.c tri-stipple.c tri-tex.c tri-tex-3d.c tri-tri.c \
	tri-unfilled.c tri-unfilled-clip.c tri-unfilled-edgeflag.c \
	tri-unfilled-fog.c tri-unfilled-point.c tri-unfilled-smooth.c \
	tri-unfilled-tri.c tri-unfilled-tri-lit.c \
	tri-unfilled-userclip.c tri-unfilled-userclip-stip.c \
	tri-userclip.c tri-viewport.c tri-z.c tri-z-9.c tri-z-eq.c \
	trifan.c trifan-flat.c trifan-flat-clip.c \
	trifan-flat-unfilled-clip.c trifan-unfilled.c tristrip.c \
	tristrip-clip.c tristrip-flat.c vbo-drawarrays.c \
	vbo-drawelements.c vbo-drawrange.c vbo-noninterleaved.c \
	vp-array.c vp-array-int.c vp-clip.c vp-line-clip.c vp-tri.c \
	vp-tri-cb.c vp-tri-cb-pos.c vp-tri-cb-tex.c vp-tri-imm.c \
	vp-tri-invariant.c vp-tri-swap.c vp-tri-tex.c vp-unfilled.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/workspace/MesaGLUT/mesa-demos-8.0.1/missing --run aclocal-1.11
AMTAR = ${SHELL} /root/workspace/MesaGLUT/mesa-demos-8.0.1/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /root/workspace/MesaGLUT/mesa-demos-8.0.1/missing --run autoconf
AUTOHEADER = ${SHELL} /root/workspace/MesaGLUT/mesa-demos-8.0.1/missing --run autoheader
AUTOMAKE = ${SHELL} /root/workspace/MesaGLUT/mesa-demos-8.0.1/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g3 -O0
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g3 -O0
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"mesa-demos\" -DPACKAGE_TARNAME=\"mesa-demos\" -DPACKAGE_VERSION=\"8.0.1\" -DPACKAGE_STRING=\"mesa-demos\ 8.0.1\" -DPACKAGE_BUGREPORT=\"https://bugs.freedesktop.org/enter_bug.cgi\?product=Mesa\" -DPACKAGE_URL=\"\" -DPACKAGE=\"mesa-demos\" -DVERSION=\"8.0.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_LIBGLUT=1
DEMO_CFLAGS =  -I/usr/include/libdrm   -I/usr/include/libdrm   -I/usr/include/libdrm   -D_GNU_SOURCE -DPTHREADS -Wall -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -fno-strict-aliasing -Wbad-function-cast -Wold-style-definition -Wdeclaration-after-statement
DEMO_LIBS =  -lGL   -lGLEW -lGLU -lGL   -lm
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_LIBS = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GLESV1_CFLAGS = 
GLESV1_LIBS = 
GLESV2_CFLAGS = 
GLESV2_LIBS = 
GLEW_CFLAGS = -I/usr/include/libdrm  
GLEW_LIBS = -lGLEW
GLUT_CFLAGS = 
GLUT_LIBS = -lglut
GLU_CFLAGS = -I/usr/include/libdrm  
GLU_LIBS = -lGLU -lGL  
GL_CFLAGS = -I/usr/include/libdrm  
GL_LIBS = -lGL  
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /root/workspace/MesaGLUT/mesa-demos-8.0.1/missing --run makeinfo
MESA_GLAPI = /src/mesa/glapi
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OSMESA16_LIBS = 
OSMESA32_LIBS = 
OSMESA_CFLAGS = 
OSMESA_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = mesa-demos
PACKAGE_BUGREPORT = https://bugs.freedesktop.org/enter_bug.cgi?product=Mesa
PACKAGE_NAME = mesa-demos
PACKAGE_STRING = mesa-demos 8.0.1
PACKAGE_TARNAME = mesa-demos
PACKAGE_URL = 
PACKAGE_VERSION = 8.0.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 8.0.1
VG_CFLAGS = 
VG_LIBS = 
X11_CFLAGS =  
X11_LIBS = -lX11 -lXext  
abs_builddir = /root/workspace/MesaGLUT/mesa-demos-8.0.1/src/trivial
abs_srcdir = /root/workspace/MesaGLUT/mesa-demos-8.0.1/src/trivial
abs_top_builddir = /root/workspace/MesaGLUT/mesa-demos-8.0.1
abs_top_srcdir = /root/workspace/MesaGLUT/mesa-demos-8.0.1
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/workspace/MesaGLUT/mesa-demos-8.0.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CFLAGS = \
	$(DEMO_CFLAGS) \
	$(GLUT_CFLAGS) \
	-I$(top_srcdir)/src/util

AM_LDFLAGS = \
	$(DEMO_LIBS) \
	$(GLUT_LIBS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/trivial/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/trivial/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
clear$(EXEEXT): $(clear_OBJECTS) $(clear_DEPENDENCIES) 
	@rm -f clear$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clear_OBJECTS) $(clear_LDADD) $(LIBS)
clear-fbo$(EXEEXT): $(clear_fbo_OBJECTS) $(clear_fbo_DEPENDENCIES) 
	@rm -f clear-fbo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clear_fbo_OBJECTS) $(clear_fbo_LDADD) $(LIBS)
clear-fbo-tex$(EXEEXT): $(clear_fbo_tex_OBJECTS) $(clear_fbo_tex_DEPENDENCIES) 
	@rm -f clear-fbo-tex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clear_fbo_tex_OBJECTS) $(clear_fbo_tex_LDADD) $(LIBS)
clear-random$(EXEEXT): $(clear_random_OBJECTS) $(clear_random_DEPENDENCIES) 
	@rm -f clear-random$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clear_random_OBJECTS) $(clear_random_LDADD) $(LIBS)
clear-repeat$(EXEEXT): $(clear_repeat_OBJECTS) $(clear_repeat_DEPENDENCIES) 
	@rm -f clear-repeat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clear_repeat_OBJECTS) $(clear_repeat_LDADD) $(LIBS)
clear-scissor$(EXEEXT): $(clear_scissor_OBJECTS) $(clear_scissor_DEPENDENCIES) 
	@rm -f clear-scissor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clear_scissor_OBJECTS) $(clear_scissor_LDADD) $(LIBS)
clear-undefined$(EXEEXT): $(clear_undefined_OBJECTS) $(clear_undefined_DEPENDENCIES) 
	@rm -f clear-undefined$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(clear_undefined_OBJECTS) $(clear_undefined_LDADD) $(LIBS)
createwin$(EXEEXT): $(createwin_OBJECTS) $(createwin_DEPENDENCIES) 
	@rm -f createwin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(createwin_OBJECTS) $(createwin_LDADD) $(LIBS)
dlist-begin-call-end$(EXEEXT): $(dlist_begin_call_end_OBJECTS) $(dlist_begin_call_end_DEPENDENCIES) 
	@rm -f dlist-begin-call-end$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_begin_call_end_OBJECTS) $(dlist_begin_call_end_LDADD) $(LIBS)
dlist-dangling$(EXEEXT): $(dlist_dangling_OBJECTS) $(dlist_dangling_DEPENDENCIES) 
	@rm -f dlist-dangling$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_dangling_OBJECTS) $(dlist_dangling_LDADD) $(LIBS)
dlist-degenerate$(EXEEXT): $(dlist_degenerate_OBJECTS) $(dlist_degenerate_DEPENDENCIES) 
	@rm -f dlist-degenerate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_degenerate_OBJECTS) $(dlist_degenerate_LDADD) $(LIBS)
dlist-edgeflag$(EXEEXT): $(dlist_edgeflag_OBJECTS) $(dlist_edgeflag_DEPENDENCIES) 
	@rm -f dlist-edgeflag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_edgeflag_OBJECTS) $(dlist_edgeflag_LDADD) $(LIBS)
dlist-edgeflag-dangling$(EXEEXT): $(dlist_edgeflag_dangling_OBJECTS) $(dlist_edgeflag_dangling_DEPENDENCIES) 
	@rm -f dlist-edgeflag-dangling$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_edgeflag_dangling_OBJECTS) $(dlist_edgeflag_dangling_LDADD) $(LIBS)
dlist-flat-tri$(EXEEXT): $(dlist_flat_tri_OBJECTS) $(dlist_flat_tri_DEPENDENCIES) 
	@rm -f dlist-flat-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_flat_tri_OBJECTS) $(dlist_flat_tri_LDADD) $(LIBS)
dlist-mat-tri$(EXEEXT): $(dlist_mat_tri_OBJECTS) $(dlist_mat_tri_DEPENDENCIES) 
	@rm -f dlist-mat-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_mat_tri_OBJECTS) $(dlist_mat_tri_LDADD) $(LIBS)
dlist-recursive-call$(EXEEXT): $(dlist_recursive_call_OBJECTS) $(dlist_recursive_call_DEPENDENCIES) 
	@rm -f dlist-recursive-call$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_recursive_call_OBJECTS) $(dlist_recursive_call_LDADD) $(LIBS)
dlist-tri-flat-tri$(EXEEXT): $(dlist_tri_flat_tri_OBJECTS) $(dlist_tri_flat_tri_DEPENDENCIES) 
	@rm -f dlist-tri-flat-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_tri_flat_tri_OBJECTS) $(dlist_tri_flat_tri_LDADD) $(LIBS)
dlist-tri-mat-tri$(EXEEXT): $(dlist_tri_mat_tri_OBJECTS) $(dlist_tri_mat_tri_DEPENDENCIES) 
	@rm -f dlist-tri-mat-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dlist_tri_mat_tri_OBJECTS) $(dlist_tri_mat_tri_LDADD) $(LIBS)
draw2arrays$(EXEEXT): $(draw2arrays_OBJECTS) $(draw2arrays_DEPENDENCIES) 
	@rm -f draw2arrays$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(draw2arrays_OBJECTS) $(draw2arrays_LDADD) $(LIBS)
drawarrays$(EXEEXT): $(drawarrays_OBJECTS) $(drawarrays_DEPENDENCIES) 
	@rm -f drawarrays$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(drawarrays_OBJECTS) $(drawarrays_LDADD) $(LIBS)
drawelements$(EXEEXT): $(drawelements_OBJECTS) $(drawelements_DEPENDENCIES) 
	@rm -f drawelements$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(drawelements_OBJECTS) $(drawelements_LDADD) $(LIBS)
drawrange$(EXEEXT): $(drawrange_OBJECTS) $(drawrange_DEPENDENCIES) 
	@rm -f drawrange$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(drawrange_OBJECTS) $(drawrange_LDADD) $(LIBS)
flat-clip$(EXEEXT): $(flat_clip_OBJECTS) $(flat_clip_DEPENDENCIES) 
	@rm -f flat-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flat_clip_OBJECTS) $(flat_clip_LDADD) $(LIBS)
fs-tri$(EXEEXT): $(fs_tri_OBJECTS) $(fs_tri_DEPENDENCIES) 
	@rm -f fs-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fs_tri_OBJECTS) $(fs_tri_LDADD) $(LIBS)
line$(EXEEXT): $(line_OBJECTS) $(line_DEPENDENCIES) 
	@rm -f line$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_OBJECTS) $(line_LDADD) $(LIBS)
line-clip$(EXEEXT): $(line_clip_OBJECTS) $(line_clip_DEPENDENCIES) 
	@rm -f line-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_clip_OBJECTS) $(line_clip_LDADD) $(LIBS)
line-cull$(EXEEXT): $(line_cull_OBJECTS) $(line_cull_DEPENDENCIES) 
	@rm -f line-cull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_cull_OBJECTS) $(line_cull_LDADD) $(LIBS)
line-flat$(EXEEXT): $(line_flat_OBJECTS) $(line_flat_DEPENDENCIES) 
	@rm -f line-flat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_flat_OBJECTS) $(line_flat_LDADD) $(LIBS)
line-smooth$(EXEEXT): $(line_smooth_OBJECTS) $(line_smooth_DEPENDENCIES) 
	@rm -f line-smooth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_smooth_OBJECTS) $(line_smooth_LDADD) $(LIBS)
line-stipple-wide$(EXEEXT): $(line_stipple_wide_OBJECTS) $(line_stipple_wide_DEPENDENCIES) 
	@rm -f line-stipple-wide$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_stipple_wide_OBJECTS) $(line_stipple_wide_LDADD) $(LIBS)
line-userclip$(EXEEXT): $(line_userclip_OBJECTS) $(line_userclip_DEPENDENCIES) 
	@rm -f line-userclip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_userclip_OBJECTS) $(line_userclip_LDADD) $(LIBS)
line-userclip-clip$(EXEEXT): $(line_userclip_clip_OBJECTS) $(line_userclip_clip_DEPENDENCIES) 
	@rm -f line-userclip-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_userclip_clip_OBJECTS) $(line_userclip_clip_LDADD) $(LIBS)
line-userclip-nop$(EXEEXT): $(line_userclip_nop_OBJECTS) $(line_userclip_nop_DEPENDENCIES) 
	@rm -f line-userclip-nop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_userclip_nop_OBJECTS) $(line_userclip_nop_LDADD) $(LIBS)
line-userclip-nop-clip$(EXEEXT): $(line_userclip_nop_clip_OBJECTS) $(line_userclip_nop_clip_DEPENDENCIES) 
	@rm -f line-userclip-nop-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_userclip_nop_clip_OBJECTS) $(line_userclip_nop_clip_LDADD) $(LIBS)
line-wide$(EXEEXT): $(line_wide_OBJECTS) $(line_wide_DEPENDENCIES) 
	@rm -f line-wide$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(line_wide_OBJECTS) $(line_wide_LDADD) $(LIBS)
lineloop$(EXEEXT): $(lineloop_OBJECTS) $(lineloop_DEPENDENCIES) 
	@rm -f lineloop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lineloop_OBJECTS) $(lineloop_LDADD) $(LIBS)
lineloop-clip$(EXEEXT): $(lineloop_clip_OBJECTS) $(lineloop_clip_DEPENDENCIES) 
	@rm -f lineloop-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lineloop_clip_OBJECTS) $(lineloop_clip_LDADD) $(LIBS)
lineloop-elts$(EXEEXT): $(lineloop_elts_OBJECTS) $(lineloop_elts_DEPENDENCIES) 
	@rm -f lineloop-elts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lineloop_elts_OBJECTS) $(lineloop_elts_LDADD) $(LIBS)
linestrip$(EXEEXT): $(linestrip_OBJECTS) $(linestrip_DEPENDENCIES) 
	@rm -f linestrip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linestrip_OBJECTS) $(linestrip_LDADD) $(LIBS)
linestrip-clip$(EXEEXT): $(linestrip_clip_OBJECTS) $(linestrip_clip_DEPENDENCIES) 
	@rm -f linestrip-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linestrip_clip_OBJECTS) $(linestrip_clip_LDADD) $(LIBS)
linestrip-flat-stipple$(EXEEXT): $(linestrip_flat_stipple_OBJECTS) $(linestrip_flat_stipple_DEPENDENCIES) 
	@rm -f linestrip-flat-stipple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linestrip_flat_stipple_OBJECTS) $(linestrip_flat_stipple_LDADD) $(LIBS)
linestrip-stipple$(EXEEXT): $(linestrip_stipple_OBJECTS) $(linestrip_stipple_DEPENDENCIES) 
	@rm -f linestrip-stipple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linestrip_stipple_OBJECTS) $(linestrip_stipple_LDADD) $(LIBS)
linestrip-stipple-wide$(EXEEXT): $(linestrip_stipple_wide_OBJECTS) $(linestrip_stipple_wide_DEPENDENCIES) 
	@rm -f linestrip-stipple-wide$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linestrip_stipple_wide_OBJECTS) $(linestrip_stipple_wide_LDADD) $(LIBS)
long-fixed-func$(EXEEXT): $(long_fixed_func_OBJECTS) $(long_fixed_func_DEPENDENCIES) 
	@rm -f long-fixed-func$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(long_fixed_func_OBJECTS) $(long_fixed_func_LDADD) $(LIBS)
pgon-mode$(EXEEXT): $(pgon_mode_OBJECTS) $(pgon_mode_DEPENDENCIES) 
	@rm -f pgon-mode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pgon_mode_OBJECTS) $(pgon_mode_LDADD) $(LIBS)
point$(EXEEXT): $(point_OBJECTS) $(point_DEPENDENCIES) 
	@rm -f point$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(point_OBJECTS) $(point_LDADD) $(LIBS)
point-clip$(EXEEXT): $(point_clip_OBJECTS) $(point_clip_DEPENDENCIES) 
	@rm -f point-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(point_clip_OBJECTS) $(point_clip_LDADD) $(LIBS)
point-param$(EXEEXT): $(point_param_OBJECTS) $(point_param_DEPENDENCIES) 
	@rm -f point-param$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(point_param_OBJECTS) $(point_param_LDADD) $(LIBS)
point-sprite$(EXEEXT): $(point_sprite_OBJECTS) $(point_sprite_DEPENDENCIES) 
	@rm -f point-sprite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(point_sprite_OBJECTS) $(point_sprite_LDADD) $(LIBS)
point-wide$(EXEEXT): $(point_wide_OBJECTS) $(point_wide_DEPENDENCIES) 
	@rm -f point-wide$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(point_wide_OBJECTS) $(point_wide_LDADD) $(LIBS)
point-wide-smooth$(EXEEXT): $(point_wide_smooth_OBJECTS) $(point_wide_smooth_DEPENDENCIES) 
	@rm -f point-wide-smooth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(point_wide_smooth_OBJECTS) $(point_wide_smooth_LDADD) $(LIBS)
poly$(EXEEXT): $(poly_OBJECTS) $(poly_DEPENDENCIES) 
	@rm -f poly$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(poly_OBJECTS) $(poly_LDADD) $(LIBS)
poly-flat$(EXEEXT): $(poly_flat_OBJECTS) $(poly_flat_DEPENDENCIES) 
	@rm -f poly-flat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(poly_flat_OBJECTS) $(poly_flat_LDADD) $(LIBS)
poly-flat-clip$(EXEEXT): $(poly_flat_clip_OBJECTS) $(poly_flat_clip_DEPENDENCIES) 
	@rm -f poly-flat-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(poly_flat_clip_OBJECTS) $(poly_flat_clip_LDADD) $(LIBS)
poly-flat-unfilled-clip$(EXEEXT): $(poly_flat_unfilled_clip_OBJECTS) $(poly_flat_unfilled_clip_DEPENDENCIES) 
	@rm -f poly-flat-unfilled-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(poly_flat_unfilled_clip_OBJECTS) $(poly_flat_unfilled_clip_LDADD) $(LIBS)
poly-unfilled$(EXEEXT): $(poly_unfilled_OBJECTS) $(poly_unfilled_DEPENDENCIES) 
	@rm -f poly-unfilled$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(poly_unfilled_OBJECTS) $(poly_unfilled_LDADD) $(LIBS)
quad$(EXEEXT): $(quad_OBJECTS) $(quad_DEPENDENCIES) 
	@rm -f quad$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_OBJECTS) $(quad_LDADD) $(LIBS)
quad-clip$(EXEEXT): $(quad_clip_OBJECTS) $(quad_clip_DEPENDENCIES) 
	@rm -f quad-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_clip_OBJECTS) $(quad_clip_LDADD) $(LIBS)
quad-clip-all-vertices$(EXEEXT): $(quad_clip_all_vertices_OBJECTS) $(quad_clip_all_vertices_DEPENDENCIES) 
	@rm -f quad-clip-all-vertices$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_clip_all_vertices_OBJECTS) $(quad_clip_all_vertices_LDADD) $(LIBS)
quad-clip-nearplane$(EXEEXT): $(quad_clip_nearplane_OBJECTS) $(quad_clip_nearplane_DEPENDENCIES) 
	@rm -f quad-clip-nearplane$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_clip_nearplane_OBJECTS) $(quad_clip_nearplane_LDADD) $(LIBS)
quad-degenerate$(EXEEXT): $(quad_degenerate_OBJECTS) $(quad_degenerate_DEPENDENCIES) 
	@rm -f quad-degenerate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_degenerate_OBJECTS) $(quad_degenerate_LDADD) $(LIBS)
quad-flat$(EXEEXT): $(quad_flat_OBJECTS) $(quad_flat_DEPENDENCIES) 
	@rm -f quad-flat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_flat_OBJECTS) $(quad_flat_LDADD) $(LIBS)
quad-offset-factor$(EXEEXT): $(quad_offset_factor_OBJECTS) $(quad_offset_factor_DEPENDENCIES) 
	@rm -f quad-offset-factor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_offset_factor_OBJECTS) $(quad_offset_factor_LDADD) $(LIBS)
quad-offset-unfilled$(EXEEXT): $(quad_offset_unfilled_OBJECTS) $(quad_offset_unfilled_DEPENDENCIES) 
	@rm -f quad-offset-unfilled$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_offset_unfilled_OBJECTS) $(quad_offset_unfilled_LDADD) $(LIBS)
quad-offset-units$(EXEEXT): $(quad_offset_units_OBJECTS) $(quad_offset_units_DEPENDENCIES) 
	@rm -f quad-offset-units$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_offset_units_OBJECTS) $(quad_offset_units_LDADD) $(LIBS)
quad-tex-2d$(EXEEXT): $(quad_tex_2d_OBJECTS) $(quad_tex_2d_DEPENDENCIES) 
	@rm -f quad-tex-2d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_tex_2d_OBJECTS) $(quad_tex_2d_LDADD) $(LIBS)
quad-tex-3d$(EXEEXT): $(quad_tex_3d_OBJECTS) $(quad_tex_3d_DEPENDENCIES) 
	@rm -f quad-tex-3d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_tex_3d_OBJECTS) $(quad_tex_3d_LDADD) $(LIBS)
quad-tex-alpha$(EXEEXT): $(quad_tex_alpha_OBJECTS) $(quad_tex_alpha_DEPENDENCIES) 
	@rm -f quad-tex-alpha$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_tex_alpha_OBJECTS) $(quad_tex_alpha_LDADD) $(LIBS)
quad-tex-pbo$(EXEEXT): $(quad_tex_pbo_OBJECTS) $(quad_tex_pbo_DEPENDENCIES) 
	@rm -f quad-tex-pbo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_tex_pbo_OBJECTS) $(quad_tex_pbo_LDADD) $(LIBS)
quad-tex-sub$(EXEEXT): $(quad_tex_sub_OBJECTS) $(quad_tex_sub_DEPENDENCIES) 
	@rm -f quad-tex-sub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_tex_sub_OBJECTS) $(quad_tex_sub_LDADD) $(LIBS)
quad-unfilled$(EXEEXT): $(quad_unfilled_OBJECTS) $(quad_unfilled_DEPENDENCIES) 
	@rm -f quad-unfilled$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_unfilled_OBJECTS) $(quad_unfilled_LDADD) $(LIBS)
quad-unfilled-clip$(EXEEXT): $(quad_unfilled_clip_OBJECTS) $(quad_unfilled_clip_DEPENDENCIES) 
	@rm -f quad-unfilled-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_unfilled_clip_OBJECTS) $(quad_unfilled_clip_LDADD) $(LIBS)
quad-unfilled-stipple$(EXEEXT): $(quad_unfilled_stipple_OBJECTS) $(quad_unfilled_stipple_DEPENDENCIES) 
	@rm -f quad-unfilled-stipple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quad_unfilled_stipple_OBJECTS) $(quad_unfilled_stipple_LDADD) $(LIBS)
quads$(EXEEXT): $(quads_OBJECTS) $(quads_DEPENDENCIES) 
	@rm -f quads$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quads_OBJECTS) $(quads_LDADD) $(LIBS)
quadstrip$(EXEEXT): $(quadstrip_OBJECTS) $(quadstrip_DEPENDENCIES) 
	@rm -f quadstrip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quadstrip_OBJECTS) $(quadstrip_LDADD) $(LIBS)
quadstrip-clip$(EXEEXT): $(quadstrip_clip_OBJECTS) $(quadstrip_clip_DEPENDENCIES) 
	@rm -f quadstrip-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quadstrip_clip_OBJECTS) $(quadstrip_clip_LDADD) $(LIBS)
quadstrip-cont$(EXEEXT): $(quadstrip_cont_OBJECTS) $(quadstrip_cont_DEPENDENCIES) 
	@rm -f quadstrip-cont$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quadstrip_cont_OBJECTS) $(quadstrip_cont_LDADD) $(LIBS)
quadstrip-flat$(EXEEXT): $(quadstrip_flat_OBJECTS) $(quadstrip_flat_DEPENDENCIES) 
	@rm -f quadstrip-flat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(quadstrip_flat_OBJECTS) $(quadstrip_flat_LDADD) $(LIBS)
readpixels$(EXEEXT): $(readpixels_OBJECTS) $(readpixels_DEPENDENCIES) 
	@rm -f readpixels$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(readpixels_OBJECTS) $(readpixels_LDADD) $(LIBS)
tri$(EXEEXT): $(tri_OBJECTS) $(tri_DEPENDENCIES) 
	@rm -f tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_OBJECTS) $(tri_LDADD) $(LIBS)
tri-alpha$(EXEEXT): $(tri_alpha_OBJECTS) $(tri_alpha_DEPENDENCIES) 
	@rm -f tri-alpha$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_alpha_OBJECTS) $(tri_alpha_LDADD) $(LIBS)
tri-alpha-tex$(EXEEXT): $(tri_alpha_tex_OBJECTS) $(tri_alpha_tex_DEPENDENCIES) 
	@rm -f tri-alpha-tex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_alpha_tex_OBJECTS) $(tri_alpha_tex_LDADD) $(LIBS)
tri-array-interleaved$(EXEEXT): $(tri_array_interleaved_OBJECTS) $(tri_array_interleaved_DEPENDENCIES) 
	@rm -f tri-array-interleaved$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_array_interleaved_OBJECTS) $(tri_array_interleaved_LDADD) $(LIBS)
tri-blend$(EXEEXT): $(tri_blend_OBJECTS) $(tri_blend_DEPENDENCIES) 
	@rm -f tri-blend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_blend_OBJECTS) $(tri_blend_LDADD) $(LIBS)
tri-blend-color$(EXEEXT): $(tri_blend_color_OBJECTS) $(tri_blend_color_DEPENDENCIES) 
	@rm -f tri-blend-color$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_blend_color_OBJECTS) $(tri_blend_color_LDADD) $(LIBS)
tri-blend-max$(EXEEXT): $(tri_blend_max_OBJECTS) $(tri_blend_max_DEPENDENCIES) 
	@rm -f tri-blend-max$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_blend_max_OBJECTS) $(tri_blend_max_LDADD) $(LIBS)
tri-blend-min$(EXEEXT): $(tri_blend_min_OBJECTS) $(tri_blend_min_DEPENDENCIES) 
	@rm -f tri-blend-min$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_blend_min_OBJECTS) $(tri_blend_min_LDADD) $(LIBS)
tri-blend-revsub$(EXEEXT): $(tri_blend_revsub_OBJECTS) $(tri_blend_revsub_DEPENDENCIES) 
	@rm -f tri-blend-revsub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_blend_revsub_OBJECTS) $(tri_blend_revsub_LDADD) $(LIBS)
tri-blend-sub$(EXEEXT): $(tri_blend_sub_OBJECTS) $(tri_blend_sub_DEPENDENCIES) 
	@rm -f tri-blend-sub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_blend_sub_OBJECTS) $(tri_blend_sub_LDADD) $(LIBS)
tri-clear$(EXEEXT): $(tri_clear_OBJECTS) $(tri_clear_DEPENDENCIES) 
	@rm -f tri-clear$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_clear_OBJECTS) $(tri_clear_LDADD) $(LIBS)
tri-clip$(EXEEXT): $(tri_clip_OBJECTS) $(tri_clip_DEPENDENCIES) 
	@rm -f tri-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_clip_OBJECTS) $(tri_clip_LDADD) $(LIBS)
tri-cull$(EXEEXT): $(tri_cull_OBJECTS) $(tri_cull_DEPENDENCIES) 
	@rm -f tri-cull$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_cull_OBJECTS) $(tri_cull_LDADD) $(LIBS)
tri-cull-both$(EXEEXT): $(tri_cull_both_OBJECTS) $(tri_cull_both_DEPENDENCIES) 
	@rm -f tri-cull-both$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_cull_both_OBJECTS) $(tri_cull_both_LDADD) $(LIBS)
tri-dlist$(EXEEXT): $(tri_dlist_OBJECTS) $(tri_dlist_DEPENDENCIES) 
	@rm -f tri-dlist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_dlist_OBJECTS) $(tri_dlist_LDADD) $(LIBS)
tri-edgeflag$(EXEEXT): $(tri_edgeflag_OBJECTS) $(tri_edgeflag_DEPENDENCIES) 
	@rm -f tri-edgeflag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_edgeflag_OBJECTS) $(tri_edgeflag_LDADD) $(LIBS)
tri-fbo$(EXEEXT): $(tri_fbo_OBJECTS) $(tri_fbo_DEPENDENCIES) 
	@rm -f tri-fbo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_fbo_OBJECTS) $(tri_fbo_LDADD) $(LIBS)
tri-fbo-tex$(EXEEXT): $(tri_fbo_tex_OBJECTS) $(tri_fbo_tex_DEPENDENCIES) 
	@rm -f tri-fbo-tex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_fbo_tex_OBJECTS) $(tri_fbo_tex_LDADD) $(LIBS)
tri-fbo-tex-mip$(EXEEXT): $(tri_fbo_tex_mip_OBJECTS) $(tri_fbo_tex_mip_DEPENDENCIES) 
	@rm -f tri-fbo-tex-mip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_fbo_tex_mip_OBJECTS) $(tri_fbo_tex_mip_LDADD) $(LIBS)
tri-flat$(EXEEXT): $(tri_flat_OBJECTS) $(tri_flat_DEPENDENCIES) 
	@rm -f tri-flat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_flat_OBJECTS) $(tri_flat_LDADD) $(LIBS)
tri-flat-clip$(EXEEXT): $(tri_flat_clip_OBJECTS) $(tri_flat_clip_DEPENDENCIES) 
	@rm -f tri-flat-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_flat_clip_OBJECTS) $(tri_flat_clip_LDADD) $(LIBS)
tri-fog$(EXEEXT): $(tri_fog_OBJECTS) $(tri_fog_DEPENDENCIES) 
	@rm -f tri-fog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_fog_OBJECTS) $(tri_fog_LDADD) $(LIBS)
tri-fp$(EXEEXT): $(tri_fp_OBJECTS) $(tri_fp_DEPENDENCIES) 
	@rm -f tri-fp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_fp_OBJECTS) $(tri_fp_LDADD) $(LIBS)
tri-fp-const-imm$(EXEEXT): $(tri_fp_const_imm_OBJECTS) $(tri_fp_const_imm_DEPENDENCIES) 
	@rm -f tri-fp-const-imm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_fp_const_imm_OBJECTS) $(tri_fp_const_imm_LDADD) $(LIBS)
tri-lit$(EXEEXT): $(tri_lit_OBJECTS) $(tri_lit_DEPENDENCIES) 
	@rm -f tri-lit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_lit_OBJECTS) $(tri_lit_LDADD) $(LIBS)
tri-lit-material$(EXEEXT): $(tri_lit_material_OBJECTS) $(tri_lit_material_DEPENDENCIES) 
	@rm -f tri-lit-material$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_lit_material_OBJECTS) $(tri_lit_material_LDADD) $(LIBS)
tri-logicop-none$(EXEEXT): $(tri_logicop_none_OBJECTS) $(tri_logicop_none_DEPENDENCIES) 
	@rm -f tri-logicop-none$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_logicop_none_OBJECTS) $(tri_logicop_none_LDADD) $(LIBS)
tri-logicop-xor$(EXEEXT): $(tri_logicop_xor_OBJECTS) $(tri_logicop_xor_DEPENDENCIES) 
	@rm -f tri-logicop-xor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_logicop_xor_OBJECTS) $(tri_logicop_xor_LDADD) $(LIBS)
tri-mask-tri$(EXEEXT): $(tri_mask_tri_OBJECTS) $(tri_mask_tri_DEPENDENCIES) 
	@rm -f tri-mask-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_mask_tri_OBJECTS) $(tri_mask_tri_LDADD) $(LIBS)
tri-multitex-vbo$(EXEEXT): $(tri_multitex_vbo_OBJECTS) $(tri_multitex_vbo_DEPENDENCIES) 
	@rm -f tri-multitex-vbo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_multitex_vbo_OBJECTS) $(tri_multitex_vbo_LDADD) $(LIBS)
tri-orig$(EXEEXT): $(tri_orig_OBJECTS) $(tri_orig_DEPENDENCIES) 
	@rm -f tri-orig$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_orig_OBJECTS) $(tri_orig_LDADD) $(LIBS)
tri-query$(EXEEXT): $(tri_query_OBJECTS) $(tri_query_DEPENDENCIES) 
	@rm -f tri-query$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_query_OBJECTS) $(tri_query_LDADD) $(LIBS)
tri-repeat$(EXEEXT): $(tri_repeat_OBJECTS) $(tri_repeat_DEPENDENCIES) 
	@rm -f tri-repeat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_repeat_OBJECTS) $(tri_repeat_LDADD) $(LIBS)
tri-scissor-tri$(EXEEXT): $(tri_scissor_tri_OBJECTS) $(tri_scissor_tri_DEPENDENCIES) 
	@rm -f tri-scissor-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_scissor_tri_OBJECTS) $(tri_scissor_tri_LDADD) $(LIBS)
tri-square$(EXEEXT): $(tri_square_OBJECTS) $(tri_square_DEPENDENCIES) 
	@rm -f tri-square$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_square_OBJECTS) $(tri_square_LDADD) $(LIBS)
tri-stencil$(EXEEXT): $(tri_stencil_OBJECTS) $(tri_stencil_DEPENDENCIES) 
	@rm -f tri-stencil$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_stencil_OBJECTS) $(tri_stencil_LDADD) $(LIBS)
tri-stipple$(EXEEXT): $(tri_stipple_OBJECTS) $(tri_stipple_DEPENDENCIES) 
	@rm -f tri-stipple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_stipple_OBJECTS) $(tri_stipple_LDADD) $(LIBS)
tri-tex$(EXEEXT): $(tri_tex_OBJECTS) $(tri_tex_DEPENDENCIES) 
	@rm -f tri-tex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_tex_OBJECTS) $(tri_tex_LDADD) $(LIBS)
tri-tex-3d$(EXEEXT): $(tri_tex_3d_OBJECTS) $(tri_tex_3d_DEPENDENCIES) 
	@rm -f tri-tex-3d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_tex_3d_OBJECTS) $(tri_tex_3d_LDADD) $(LIBS)
tri-tri$(EXEEXT): $(tri_tri_OBJECTS) $(tri_tri_DEPENDENCIES) 
	@rm -f tri-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_tri_OBJECTS) $(tri_tri_LDADD) $(LIBS)
tri-unfilled$(EXEEXT): $(tri_unfilled_OBJECTS) $(tri_unfilled_DEPENDENCIES) 
	@rm -f tri-unfilled$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_OBJECTS) $(tri_unfilled_LDADD) $(LIBS)
tri-unfilled-clip$(EXEEXT): $(tri_unfilled_clip_OBJECTS) $(tri_unfilled_clip_DEPENDENCIES) 
	@rm -f tri-unfilled-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_clip_OBJECTS) $(tri_unfilled_clip_LDADD) $(LIBS)
tri-unfilled-edgeflag$(EXEEXT): $(tri_unfilled_edgeflag_OBJECTS) $(tri_unfilled_edgeflag_DEPENDENCIES) 
	@rm -f tri-unfilled-edgeflag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_edgeflag_OBJECTS) $(tri_unfilled_edgeflag_LDADD) $(LIBS)
tri-unfilled-fog$(EXEEXT): $(tri_unfilled_fog_OBJECTS) $(tri_unfilled_fog_DEPENDENCIES) 
	@rm -f tri-unfilled-fog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_fog_OBJECTS) $(tri_unfilled_fog_LDADD) $(LIBS)
tri-unfilled-point$(EXEEXT): $(tri_unfilled_point_OBJECTS) $(tri_unfilled_point_DEPENDENCIES) 
	@rm -f tri-unfilled-point$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_point_OBJECTS) $(tri_unfilled_point_LDADD) $(LIBS)
tri-unfilled-smooth$(EXEEXT): $(tri_unfilled_smooth_OBJECTS) $(tri_unfilled_smooth_DEPENDENCIES) 
	@rm -f tri-unfilled-smooth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_smooth_OBJECTS) $(tri_unfilled_smooth_LDADD) $(LIBS)
tri-unfilled-tri$(EXEEXT): $(tri_unfilled_tri_OBJECTS) $(tri_unfilled_tri_DEPENDENCIES) 
	@rm -f tri-unfilled-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_tri_OBJECTS) $(tri_unfilled_tri_LDADD) $(LIBS)
tri-unfilled-tri-lit$(EXEEXT): $(tri_unfilled_tri_lit_OBJECTS) $(tri_unfilled_tri_lit_DEPENDENCIES) 
	@rm -f tri-unfilled-tri-lit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_tri_lit_OBJECTS) $(tri_unfilled_tri_lit_LDADD) $(LIBS)
tri-unfilled-userclip$(EXEEXT): $(tri_unfilled_userclip_OBJECTS) $(tri_unfilled_userclip_DEPENDENCIES) 
	@rm -f tri-unfilled-userclip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_userclip_OBJECTS) $(tri_unfilled_userclip_LDADD) $(LIBS)
tri-unfilled-userclip-stip$(EXEEXT): $(tri_unfilled_userclip_stip_OBJECTS) $(tri_unfilled_userclip_stip_DEPENDENCIES) 
	@rm -f tri-unfilled-userclip-stip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_unfilled_userclip_stip_OBJECTS) $(tri_unfilled_userclip_stip_LDADD) $(LIBS)
tri-userclip$(EXEEXT): $(tri_userclip_OBJECTS) $(tri_userclip_DEPENDENCIES) 
	@rm -f tri-userclip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_userclip_OBJECTS) $(tri_userclip_LDADD) $(LIBS)
tri-viewport$(EXEEXT): $(tri_viewport_OBJECTS) $(tri_viewport_DEPENDENCIES) 
	@rm -f tri-viewport$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_viewport_OBJECTS) $(tri_viewport_LDADD) $(LIBS)
tri-z$(EXEEXT): $(tri_z_OBJECTS) $(tri_z_DEPENDENCIES) 
	@rm -f tri-z$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_z_OBJECTS) $(tri_z_LDADD) $(LIBS)
tri-z-9$(EXEEXT): $(tri_z_9_OBJECTS) $(tri_z_9_DEPENDENCIES) 
	@rm -f tri-z-9$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_z_9_OBJECTS) $(tri_z_9_LDADD) $(LIBS)
tri-z-eq$(EXEEXT): $(tri_z_eq_OBJECTS) $(tri_z_eq_DEPENDENCIES) 
	@rm -f tri-z-eq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tri_z_eq_OBJECTS) $(tri_z_eq_LDADD) $(LIBS)
trifan$(EXEEXT): $(trifan_OBJECTS) $(trifan_DEPENDENCIES) 
	@rm -f trifan$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trifan_OBJECTS) $(trifan_LDADD) $(LIBS)
trifan-flat$(EXEEXT): $(trifan_flat_OBJECTS) $(trifan_flat_DEPENDENCIES) 
	@rm -f trifan-flat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trifan_flat_OBJECTS) $(trifan_flat_LDADD) $(LIBS)
trifan-flat-clip$(EXEEXT): $(trifan_flat_clip_OBJECTS) $(trifan_flat_clip_DEPENDENCIES) 
	@rm -f trifan-flat-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trifan_flat_clip_OBJECTS) $(trifan_flat_clip_LDADD) $(LIBS)
trifan-flat-unfilled-clip$(EXEEXT): $(trifan_flat_unfilled_clip_OBJECTS) $(trifan_flat_unfilled_clip_DEPENDENCIES) 
	@rm -f trifan-flat-unfilled-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trifan_flat_unfilled_clip_OBJECTS) $(trifan_flat_unfilled_clip_LDADD) $(LIBS)
trifan-unfilled$(EXEEXT): $(trifan_unfilled_OBJECTS) $(trifan_unfilled_DEPENDENCIES) 
	@rm -f trifan-unfilled$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(trifan_unfilled_OBJECTS) $(trifan_unfilled_LDADD) $(LIBS)
tristrip$(EXEEXT): $(tristrip_OBJECTS) $(tristrip_DEPENDENCIES) 
	@rm -f tristrip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tristrip_OBJECTS) $(tristrip_LDADD) $(LIBS)
tristrip-clip$(EXEEXT): $(tristrip_clip_OBJECTS) $(tristrip_clip_DEPENDENCIES) 
	@rm -f tristrip-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tristrip_clip_OBJECTS) $(tristrip_clip_LDADD) $(LIBS)
tristrip-flat$(EXEEXT): $(tristrip_flat_OBJECTS) $(tristrip_flat_DEPENDENCIES) 
	@rm -f tristrip-flat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tristrip_flat_OBJECTS) $(tristrip_flat_LDADD) $(LIBS)
vbo-drawarrays$(EXEEXT): $(vbo_drawarrays_OBJECTS) $(vbo_drawarrays_DEPENDENCIES) 
	@rm -f vbo-drawarrays$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vbo_drawarrays_OBJECTS) $(vbo_drawarrays_LDADD) $(LIBS)
vbo-drawelements$(EXEEXT): $(vbo_drawelements_OBJECTS) $(vbo_drawelements_DEPENDENCIES) 
	@rm -f vbo-drawelements$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vbo_drawelements_OBJECTS) $(vbo_drawelements_LDADD) $(LIBS)
vbo-drawrange$(EXEEXT): $(vbo_drawrange_OBJECTS) $(vbo_drawrange_DEPENDENCIES) 
	@rm -f vbo-drawrange$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vbo_drawrange_OBJECTS) $(vbo_drawrange_LDADD) $(LIBS)
vbo-noninterleaved$(EXEEXT): $(vbo_noninterleaved_OBJECTS) $(vbo_noninterleaved_DEPENDENCIES) 
	@rm -f vbo-noninterleaved$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vbo_noninterleaved_OBJECTS) $(vbo_noninterleaved_LDADD) $(LIBS)
vp-array$(EXEEXT): $(vp_array_OBJECTS) $(vp_array_DEPENDENCIES) 
	@rm -f vp-array$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_array_OBJECTS) $(vp_array_LDADD) $(LIBS)
vp-array-int$(EXEEXT): $(vp_array_int_OBJECTS) $(vp_array_int_DEPENDENCIES) 
	@rm -f vp-array-int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_array_int_OBJECTS) $(vp_array_int_LDADD) $(LIBS)
vp-clip$(EXEEXT): $(vp_clip_OBJECTS) $(vp_clip_DEPENDENCIES) 
	@rm -f vp-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_clip_OBJECTS) $(vp_clip_LDADD) $(LIBS)
vp-line-clip$(EXEEXT): $(vp_line_clip_OBJECTS) $(vp_line_clip_DEPENDENCIES) 
	@rm -f vp-line-clip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_line_clip_OBJECTS) $(vp_line_clip_LDADD) $(LIBS)
vp-tri$(EXEEXT): $(vp_tri_OBJECTS) $(vp_tri_DEPENDENCIES) 
	@rm -f vp-tri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_OBJECTS) $(vp_tri_LDADD) $(LIBS)
vp-tri-cb$(EXEEXT): $(vp_tri_cb_OBJECTS) $(vp_tri_cb_DEPENDENCIES) 
	@rm -f vp-tri-cb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_cb_OBJECTS) $(vp_tri_cb_LDADD) $(LIBS)
vp-tri-cb-pos$(EXEEXT): $(vp_tri_cb_pos_OBJECTS) $(vp_tri_cb_pos_DEPENDENCIES) 
	@rm -f vp-tri-cb-pos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_cb_pos_OBJECTS) $(vp_tri_cb_pos_LDADD) $(LIBS)
vp-tri-cb-tex$(EXEEXT): $(vp_tri_cb_tex_OBJECTS) $(vp_tri_cb_tex_DEPENDENCIES) 
	@rm -f vp-tri-cb-tex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_cb_tex_OBJECTS) $(vp_tri_cb_tex_LDADD) $(LIBS)
vp-tri-imm$(EXEEXT): $(vp_tri_imm_OBJECTS) $(vp_tri_imm_DEPENDENCIES) 
	@rm -f vp-tri-imm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_imm_OBJECTS) $(vp_tri_imm_LDADD) $(LIBS)
vp-tri-invariant$(EXEEXT): $(vp_tri_invariant_OBJECTS) $(vp_tri_invariant_DEPENDENCIES) 
	@rm -f vp-tri-invariant$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_invariant_OBJECTS) $(vp_tri_invariant_LDADD) $(LIBS)
vp-tri-swap$(EXEEXT): $(vp_tri_swap_OBJECTS) $(vp_tri_swap_DEPENDENCIES) 
	@rm -f vp-tri-swap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_swap_OBJECTS) $(vp_tri_swap_LDADD) $(LIBS)
vp-tri-tex$(EXEEXT): $(vp_tri_tex_OBJECTS) $(vp_tri_tex_DEPENDENCIES) 
	@rm -f vp-tri-tex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_tri_tex_OBJECTS) $(vp_tri_tex_LDADD) $(LIBS)
vp-unfilled$(EXEEXT): $(vp_unfilled_OBJECTS) $(vp_unfilled_DEPENDENCIES) 
	@rm -f vp-unfilled$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vp_unfilled_OBJECTS) $(vp_unfilled_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/clear-fbo-tex.Po
include ./$(DEPDIR)/clear-fbo.Po
include ./$(DEPDIR)/clear-random.Po
include ./$(DEPDIR)/clear-repeat.Po
include ./$(DEPDIR)/clear-scissor.Po
include ./$(DEPDIR)/clear-undefined.Po
include ./$(DEPDIR)/clear.Po
include ./$(DEPDIR)/createwin.Po
include ./$(DEPDIR)/dlist-begin-call-end.Po
include ./$(DEPDIR)/dlist-dangling.Po
include ./$(DEPDIR)/dlist-degenerate.Po
include ./$(DEPDIR)/dlist-edgeflag-dangling.Po
include ./$(DEPDIR)/dlist-edgeflag.Po
include ./$(DEPDIR)/dlist-flat-tri.Po
include ./$(DEPDIR)/dlist-mat-tri.Po
include ./$(DEPDIR)/dlist-recursive-call.Po
include ./$(DEPDIR)/dlist-tri-flat-tri.Po
include ./$(DEPDIR)/dlist-tri-mat-tri.Po
include ./$(DEPDIR)/draw2arrays.Po
include ./$(DEPDIR)/drawarrays.Po
include ./$(DEPDIR)/drawelements.Po
include ./$(DEPDIR)/drawrange.Po
include ./$(DEPDIR)/flat-clip.Po
include ./$(DEPDIR)/fs-tri.Po
include ./$(DEPDIR)/line-clip.Po
include ./$(DEPDIR)/line-cull.Po
include ./$(DEPDIR)/line-flat.Po
include ./$(DEPDIR)/line-smooth.Po
include ./$(DEPDIR)/line-stipple-wide.Po
include ./$(DEPDIR)/line-userclip-clip.Po
include ./$(DEPDIR)/line-userclip-nop-clip.Po
include ./$(DEPDIR)/line-userclip-nop.Po
include ./$(DEPDIR)/line-userclip.Po
include ./$(DEPDIR)/line-wide.Po
include ./$(DEPDIR)/line.Po
include ./$(DEPDIR)/lineloop-clip.Po
include ./$(DEPDIR)/lineloop-elts.Po
include ./$(DEPDIR)/lineloop.Po
include ./$(DEPDIR)/linestrip-clip.Po
include ./$(DEPDIR)/linestrip-flat-stipple.Po
include ./$(DEPDIR)/linestrip-stipple-wide.Po
include ./$(DEPDIR)/linestrip-stipple.Po
include ./$(DEPDIR)/linestrip.Po
include ./$(DEPDIR)/long-fixed-func.Po
include ./$(DEPDIR)/pgon-mode.Po
include ./$(DEPDIR)/point-clip.Po
include ./$(DEPDIR)/point-param.Po
include ./$(DEPDIR)/point-sprite.Po
include ./$(DEPDIR)/point-wide-smooth.Po
include ./$(DEPDIR)/point-wide.Po
include ./$(DEPDIR)/point.Po
include ./$(DEPDIR)/poly-flat-clip.Po
include ./$(DEPDIR)/poly-flat-unfilled-clip.Po
include ./$(DEPDIR)/poly-flat.Po
include ./$(DEPDIR)/poly-unfilled.Po
include ./$(DEPDIR)/poly.Po
include ./$(DEPDIR)/quad-clip-all-vertices.Po
include ./$(DEPDIR)/quad-clip-nearplane.Po
include ./$(DEPDIR)/quad-clip.Po
include ./$(DEPDIR)/quad-degenerate.Po
include ./$(DEPDIR)/quad-flat.Po
include ./$(DEPDIR)/quad-offset-factor.Po
include ./$(DEPDIR)/quad-offset-unfilled.Po
include ./$(DEPDIR)/quad-offset-units.Po
include ./$(DEPDIR)/quad-tex-2d.Po
include ./$(DEPDIR)/quad-tex-3d.Po
include ./$(DEPDIR)/quad-tex-alpha.Po
include ./$(DEPDIR)/quad-tex-pbo.Po
include ./$(DEPDIR)/quad-tex-sub.Po
include ./$(DEPDIR)/quad-unfilled-clip.Po
include ./$(DEPDIR)/quad-unfilled-stipple.Po
include ./$(DEPDIR)/quad-unfilled.Po
include ./$(DEPDIR)/quad.Po
include ./$(DEPDIR)/quads.Po
include ./$(DEPDIR)/quadstrip-clip.Po
include ./$(DEPDIR)/quadstrip-cont.Po
include ./$(DEPDIR)/quadstrip-flat.Po
include ./$(DEPDIR)/quadstrip.Po
include ./$(DEPDIR)/readpixels.Po
include ./$(DEPDIR)/tri-alpha-tex.Po
include ./$(DEPDIR)/tri-alpha.Po
include ./$(DEPDIR)/tri-array-interleaved.Po
include ./$(DEPDIR)/tri-blend-color.Po
include ./$(DEPDIR)/tri-blend-max.Po
include ./$(DEPDIR)/tri-blend-min.Po
include ./$(DEPDIR)/tri-blend-revsub.Po
include ./$(DEPDIR)/tri-blend-sub.Po
include ./$(DEPDIR)/tri-blend.Po
include ./$(DEPDIR)/tri-clear.Po
include ./$(DEPDIR)/tri-clip.Po
include ./$(DEPDIR)/tri-cull-both.Po
include ./$(DEPDIR)/tri-cull.Po
include ./$(DEPDIR)/tri-dlist.Po
include ./$(DEPDIR)/tri-edgeflag.Po
include ./$(DEPDIR)/tri-fbo-tex-mip.Po
include ./$(DEPDIR)/tri-fbo-tex.Po
include ./$(DEPDIR)/tri-fbo.Po
include ./$(DEPDIR)/tri-flat-clip.Po
include ./$(DEPDIR)/tri-flat.Po
include ./$(DEPDIR)/tri-fog.Po
include ./$(DEPDIR)/tri-fp-const-imm.Po
include ./$(DEPDIR)/tri-fp.Po
include ./$(DEPDIR)/tri-lit-material.Po
include ./$(DEPDIR)/tri-lit.Po
include ./$(DEPDIR)/tri-logicop-none.Po
include ./$(DEPDIR)/tri-logicop-xor.Po
include ./$(DEPDIR)/tri-mask-tri.Po
include ./$(DEPDIR)/tri-multitex-vbo.Po
include ./$(DEPDIR)/tri-orig.Po
include ./$(DEPDIR)/tri-query.Po
include ./$(DEPDIR)/tri-repeat.Po
include ./$(DEPDIR)/tri-scissor-tri.Po
include ./$(DEPDIR)/tri-square.Po
include ./$(DEPDIR)/tri-stencil.Po
include ./$(DEPDIR)/tri-stipple.Po
include ./$(DEPDIR)/tri-tex-3d.Po
include ./$(DEPDIR)/tri-tex.Po
include ./$(DEPDIR)/tri-tri.Po
include ./$(DEPDIR)/tri-unfilled-clip.Po
include ./$(DEPDIR)/tri-unfilled-edgeflag.Po
include ./$(DEPDIR)/tri-unfilled-fog.Po
include ./$(DEPDIR)/tri-unfilled-point.Po
include ./$(DEPDIR)/tri-unfilled-smooth.Po
include ./$(DEPDIR)/tri-unfilled-tri-lit.Po
include ./$(DEPDIR)/tri-unfilled-tri.Po
include ./$(DEPDIR)/tri-unfilled-userclip-stip.Po
include ./$(DEPDIR)/tri-unfilled-userclip.Po
include ./$(DEPDIR)/tri-unfilled.Po
include ./$(DEPDIR)/tri-userclip.Po
include ./$(DEPDIR)/tri-viewport.Po
include ./$(DEPDIR)/tri-z-9.Po
include ./$(DEPDIR)/tri-z-eq.Po
include ./$(DEPDIR)/tri-z.Po
include ./$(DEPDIR)/tri.Po
include ./$(DEPDIR)/trifan-flat-clip.Po
include ./$(DEPDIR)/trifan-flat-unfilled-clip.Po
include ./$(DEPDIR)/trifan-flat.Po
include ./$(DEPDIR)/trifan-unfilled.Po
include ./$(DEPDIR)/trifan.Po
include ./$(DEPDIR)/tristrip-clip.Po
include ./$(DEPDIR)/tristrip-flat.Po
include ./$(DEPDIR)/tristrip.Po
include ./$(DEPDIR)/vbo-drawarrays.Po
include ./$(DEPDIR)/vbo-drawelements.Po
include ./$(DEPDIR)/vbo-drawrange.Po
include ./$(DEPDIR)/vbo-noninterleaved.Po
include ./$(DEPDIR)/vp-array-int.Po
include ./$(DEPDIR)/vp-array.Po
include ./$(DEPDIR)/vp-clip.Po
include ./$(DEPDIR)/vp-line-clip.Po
include ./$(DEPDIR)/vp-tri-cb-pos.Po
include ./$(DEPDIR)/vp-tri-cb-tex.Po
include ./$(DEPDIR)/vp-tri-cb.Po
include ./$(DEPDIR)/vp-tri-imm.Po
include ./$(DEPDIR)/vp-tri-invariant.Po
include ./$(DEPDIR)/vp-tri-swap.Po
include ./$(DEPDIR)/vp-tri-tex.Po
include ./$(DEPDIR)/vp-tri.Po
include ./$(DEPDIR)/vp-unfilled.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
